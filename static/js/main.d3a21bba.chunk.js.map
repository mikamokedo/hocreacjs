{"version":3,"sources":["components/TaskForm.js","components/Sort.js","components/Search.js","components/Control.js","components/TaskItem.js","components/TaskList.js","App.js","serviceWorker.js","index.js"],"names":["TaskForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","layprops","trangthai","layForm","event","target","name","value","setState","defineProperty","onSubmit","preventDefault","state","onClear","status","id","tasktEdit","nextProps","oname","react_default","a","createElement","className","role","type","aria-hidden","onClick","onChange","Component","Sort","sort","_this2","_this$state","data-toggle","aria-haspopup","aria-expanded","href","Search","keywords","aria-describedby","Control","components_Search","components_Sort","onsort","TaskItem","onUpdateStatus","onDelete","onEdit","scope","index","TaskList","onchange","onFilter","fillterName","fillterStt","elementList","item","map","components_TaskItem","key","randomstring","require","App","hienForm","displayForm","tastEdit","trangThai","hihi","data","tasksm","generate","tasksm2","tasks","push","localStorage","setItem","JSON","stringify","z","task","_","findIndex","o","card5","forEach","splice","cacac","fillterstt","sortBy","sortValue","getItem","concac","parse","listInccc","elementForm","components_TaskForm","filter","toLowerCase","indexOf","b","components_Control","components_TaskList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d3a21bba.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\n\r\nclass TaskForm extends Component{\r\n       layprops=()=>{\r\n        this.props.trangthai(false);\r\n       };\r\n       constructor(props){\r\n           super(props);\r\n           this.state=({\r\n                name : '',\r\n                status: 'true',\r\n                id : ''\r\n           });\r\n       };\r\n       componentWillMount(){\r\n        if(this.props.tasktEdit){\r\n            this.setState({\r\n                name : this.props.tasktEdit.name,\r\n                status: this.props.tasktEdit.status,\r\n                id : this.props.tasktEdit.id\r\n            })\r\n        }\r\n       }\r\n\r\n       componentWillReceiveProps(nextProps){\r\n        if(nextProps.tasktEdit){\r\n            this.setState({\r\n                name : nextProps.tasktEdit.name,\r\n                status: nextProps.tasktEdit.status,\r\n                id : nextProps.tasktEdit.id\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                name : '',\r\n                status: 'true',\r\n                id : ''\r\n           });\r\n        }\r\n    }\r\n\r\n       layForm=(event)=>{\r\n         var  target = event.target;\r\n         var  name = target.name;\r\n         var   value = target.value;\r\n            this.setState({\r\n                [name] : value\r\n            })\r\n            \r\n       };\r\n       onSubmit=(event)=>{\r\n        event.preventDefault()\r\n        this.props.onSubmit(this.state);\r\n        this.layprops();\r\n       };\r\n       onClear =()=>{\r\n        this.setState({\r\n            name : '',\r\n        })\r\n        \r\n                \r\n       };\r\n       \r\n    render(){\r\n        var oname = this.state.name;\r\n        return(\r\n                   \r\n                <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n                <p className=\"text-success\">{this.state.id ? \"cập nhật công việc\" : \"Thêm Công Việc\"}</p>\r\n            <button type=\"button\" className=\"close\">\r\n            <span aria-hidden=\"true\" onClick={this.layprops}>&times;</span>\r\n            </button>\r\n            <label>Tên</label>\r\n            <form>\r\n                <input type=\"text\" name=\"name\" className=\"form-control\" onChange={this.layForm} value={oname}/>\r\n                <label>Trạng thái</label>\r\n                <select name=\"status\" className=\"form-control mb-3\" onChange={this.layForm}>\r\n                <option value={true}>kích hoạt</option>\r\n                <option value={false}>Ẩn</option>\r\n                </select>\r\n                <div className=\"btn-group\">\r\n                <div className=\"btn btn-warning\" type=\"submit\" onClick={this.onSubmit}>Luu Lai</div> \r\n               \r\n                </div>   \r\n                <div className=\"btn btn-danger\" onClick={this.onClear}>Huy Bo</div>    \r\n                </form>\r\n                </div>\r\n               \r\n         \r\n    \r\n    \r\n        )}\r\n}\r\nexport default TaskForm;","import React, {Component} from 'react';\r\nimport './todolist.css';\r\n\r\nclass Sort extends Component{\r\n constructor(props){\r\n   super(props);\r\n   this.state={\r\n     sort : '',\r\n     value: 1,\r\n   }\r\n   \r\n }\r\n \r\n \r\n  sort =(name,value)=>{  \r\n    this.setState({\r\n      sort : name,\r\n      value: value,\r\n    });\r\n    this.props.sort(name,value);\r\n  }\r\n\r\n       \r\n    render(){\r\n      var {sort,value} = this.state;\r\n      \r\n        return(\r\n        <div className=\"input-group-prepend\">\r\n        \r\n\r\n            <button className=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Sap xep</button>\r\n            <div className=\"dropdown-menu\">\r\n              <a className={(sort === \"name\" && value === 1) ? \"dropdown-item concacto\" : \"dropdown-item\"} href=\"#\" onClick={()=>this.sort('name',1)}>A -> Z</a>\r\n              <a className={(sort === \"name\" && value === -1) ? \"dropdown-item concacto\" : \"dropdown-item\"} href=\"#\" onClick={()=>this.sort('name',-1)}>Z -> A</a>\r\n              <a className={(sort === \"status\" && value === 1) ? \"dropdown-item concacto\" : \"dropdown-item\"} href=\"#\" onClick={()=>this.sort('status',1)}>Something else here</a>\r\n              <a className={(sort === \"status\" && value === -1) ? \"dropdown-item concacto\" : \"dropdown-item\"} href=\"#\" onClick={()=>this.sort('status',-1)}>Separated link</a>\r\n            </div>\r\n          </div>\r\n\r\n    \r\n        )}\r\n}\r\nexport default Sort;","import React, {Component} from 'react';\r\n\r\n\r\nclass Search extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            keywords : ''\r\n        })\r\n    } \r\n    onChange =(event)=>{\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }  \r\n    onClick =()=>{\r\n        this.props.keywords(this.state.keywords);\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"input-group mb-3 mt-3\">\r\n            <input type=\"text\" className=\"keywords\" aria-describedby=\"basic-addon1\" name=\"keywords\" onChange={this.onChange}/>\r\n            <div className=\"input-group-prepend\">\r\n                <button className=\"btn btn-primary\" type=\"button\" onClick={this.onClick}>Tìm</button>\r\n              </div>\r\n    \r\n              </div>\r\n        )}\r\n}\r\nexport default Search;","import React, {Component} from 'react';\r\nimport Sort from './Sort';\r\nimport Search from './Search';\r\n\r\nclass Control extends Component{\r\n       \r\n    render(){\r\n        return(\r\n            <div>\r\n                <Search keywords={this.props.keywords}/>\r\n\r\n                <Sort sort={this.props.onsort}/>\r\n                </div>    \r\n           \r\n    \r\n    \r\n        )}\r\n}\r\nexport default Control;","import React, {Component} from 'react';\r\n\r\nclass TaskItem extends Component{  \r\n   \r\n  onUpdateStatus=()=>{\r\n    // this.props.onUpdateStatus(!this.props.status);\r\n    this.props.onUpdateStatus(this.props.id);\r\n  }\r\n  onDelete =()=>{\r\n    this.props.onDelete(this.props.id);\r\n\r\n  };\r\n  onEdit =()=>{\r\n    this.props.onEdit(this.props.id);\r\n  }\r\n\r\n    render(){\r\n     \r\n\r\n        return(\r\n\r\n              <tr>\r\n                <th scope=\"row\">{this.props.index +1}</th>\r\n                <td>{this.props.name}</td>\r\n                <td><span className={this.props.status ? 'badge badge-success' : 'badge badge-danger'} onClick={this.onUpdateStatus}>{this.props.status ? 'kich hoat' : 'dang an'}</span></td>\r\n                <td>\r\n                    <div className=\"btn-group\">\r\n                    <div className=\"btn btn-warning\" onClick={this.onEdit}>sua</div> \r\n                    <div className=\"btn btn-danger\" onClick={this.onDelete}>xoa</div>  \r\n                </div>\r\n                </td>\r\n              </tr>\r\n\r\n            \r\n        )}\r\n}\r\nexport default TaskItem;","import React, {Component} from 'react';\r\nimport TaskItem from './TaskItem';\r\n\r\nclass TaskList extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = { \r\n      fillterName : '',\r\n      fillterStt: \"1\" // -1 active 1 deactive 0 an\r\n\r\n    }\r\n  }\r\n  onchange =(event)=>{\r\n  var  target = event.target;\r\n  var  name   = target.name;\r\n  var  value   = target.value;\r\n    this.setState({\r\n      [name] : value\r\n    })\r\n    this.props.onFilter(this.state.fillterName,this.state.fillterStt);\r\n\r\n  }\r\n\r\n\r\n \r\n    render(){\r\n        var listIn = this.props.item;\r\n        var elementList = listIn.map((item,index)=>{\r\n                return <TaskItem key={index} id={item.id} name={item.name} status={item.status} index={index} onUpdateStatus={this.props.onUpdateStatus} onDelete={this.props.onDelete}\r\n                onEdit={this.props.onEdit}\r\n                />\r\n              \r\n    \r\n        })\r\n        return(\r\n            <table className=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">STT</th>\r\n                <th scope=\"col\">Tên</th>\r\n                <th scope=\"col\">Trạng Thái</th>\r\n                <th scope=\"col\">Hành động</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <th scope=\"row\">list</th>\r\n                <td><input type=\"text\" name=\"fillterName\" className=\"form-control\"\r\n                \r\n                 onChange = {this.onchange}\r\n                 /></td>\r\n                <td>\r\n                    <select name=\"fillterStt\" className=\"form-control\"\r\n                                     \r\n                                     onChange = {this.onchange}\r\n                    >\r\n                        <option value=\"0\">tất cả</option>\r\n                        <option value=\"-1\">kích hoạt</option>\r\n                        <option value=\"1\">Ẩn</option>\r\n                    </select>\r\n                </td>\r\n                <td>\r\n                    \r\n                </td>\r\n                </tr>\r\n\r\n                        {elementList}\r\n            </tbody>\r\n          </table>\r\n            \r\n        )}\r\n}\r\nexport default TaskList;","import React, { Component } from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport Control from './components/Control';\nimport TaskList from './components/TaskList';\nimport _ from 'lodash';\nvar randomstring = require(\"randomstring\");\n\n\n\nclass App extends Component { \n    constructor(props){\n        super(props);\n        this.state={\n            tasks:[],\n            displayForm : false,\n            tastEdit :null,\n            fillterName: '',\n            fillterstt : '0',\n            keywords : '',\n            sortBy: '',\n            sortValue: 1\n            \n    }}\ncomponentWillMount(){\n        if(localStorage && localStorage.getItem('tasks')){\n        var concac = JSON.parse(localStorage.getItem('tasks'));\n            this.setState({\n                tasks :concac\n            });\n        }\n        \n}\n\n    hienForm=()=>{\n        if(this.state.displayForm && this.state.tastEdit !== null){\n            this.setState({\n                displayForm : true,\n                tastEdit: null\n            });\n        }\n        else{\n            this.setState({\n                displayForm :  !this.state.displayForm,\n                tastEdit: null\n            });\n        }\n  \n        \n    };\n    trangThai=(hihi)=>{\n            this.setState({\n                displayForm : hihi\n            });\n    };\n    onSubmit=(data)=>{\n\n                var tasksm = {\n                    id : randomstring.generate(7)+'-'+randomstring.generate(7)+'-'+randomstring.generate(7),\n                    name : data.name,\n                    status : data.status==='true' ? true : false\n                    }\n                var tasksm2 = this.state.tasks;\n                tasksm2.push(tasksm);  \n                this.setState({\n                    tasks : tasksm2\n                        });\n        localStorage.setItem('tasks',JSON.stringify(tasksm2));       \n    }\n    onUpdateStatus=(z)=>{\n        var task= this.state.tasks;\n       var index  = _.findIndex(task, function(o) { return o.id === z; }); \n           \n        if(index !== -1){\n            task[index].status = !task[index].status;\n           \n            this.setState({\n                tasks : task\n            })\n           localStorage.setItem('tasks',JSON.stringify(this.state.tasks));\n        }\n    \n    }\n    findIndex = (id) =>{\n        var task = this.state.tasks;\n        var card5 = 0;\n        task.forEach((item,index)=>{\n            if(item.id === id){ \n                 card5 = index;\n            }\n            \n        });\n\n        return card5;\n        \n    };\n    onDelete =(id)=>{\n       var task = this.state.tasks;\n       task.forEach((item,index) =>{\n           if(item.id === id){\n               task.splice(index,1);\n               this.setState({\n                    tasks : task\n               })\n               localStorage.setItem('tasks',JSON.stringify(this.state.tasks));\n               this.trangThai();\n           }      \n       })\n    };\n    onEdit =(id)=>{\n     var   task = this.state.tasks;\n        task.forEach((item,index) =>{\n            var cacac = task[index];\n            if(id === item.id){\n                this.setState({\n                    tastEdit : cacac \n\n                })\n                this.setState({\n                    displayForm : true\n                })\n            }\n        }) \n    \n    \n    }\n    onFilter =(data,id)=>{\n        this.setState({   \n                fillterName: data,\n                fillterstt: id\n            })\n\n    }\n    keywords=(data)=>{\n        this.setState({\n            keywords : data\n        });\n        \n\n  }\n  onsort=(name,value)=>{\n    this.setState({\n        sortBy: name,\n        sortValue: value\n    })\n  };\n\n  render(){\n      var {sortBy,sortValue} = this.state;\n      var keywords = this.state.keywords;\n      var fillterName = this.state.fillterName;\n      var fillterstt = this.state.fillterstt;\n      var listInccc = this.state.tasks;\n      var displayForm = this.state.displayForm;\n      var elementForm = displayForm ? <TaskForm trangthai={this.trangThai} onSubmit={this.onSubmit} tasktEdit={this.state.tastEdit}/> : '';\n    \n            if(fillterName){\n\n                listInccc =   listInccc.filter((item)=>{\n                    return item.name.toLowerCase().indexOf(fillterName) !== -1;\n                });   \n            }\n            \n                listInccc =   listInccc.filter((item)=>{                  \n                    if(fillterstt === '0'){\n                        return listInccc;\n                    }\n                    else {\n                        return item.status === (fillterstt === \"-1\" ? true :false);\n                    }\n                });\n      \n            \n            if(keywords){\n                listInccc = listInccc.filter((item)=>{\n                        return item.name.toLowerCase().indexOf(keywords) !== -1;\n                })\n\n             }   \n             if(sortBy === \"name\"){\n                listInccc = listInccc.sort((a,b)=>{\n                    if(a.name > b.name) return sortValue;\n                    else if(a.name < b.name) return -sortValue; \n                }); \n             }\n             else if(sortBy === \"status\"){\n                listInccc = listInccc.sort((a,b)=>{\n                    if(a.status > b.status) return sortValue;\n                    else if(a.status < b.status) return -sortValue; \n                }); \n\n             }\n             \n      return(\n            <div className=\"container\">\n                    <div className=\"row text-center\">\n                            <h1>Quản Lý công việc</h1>\n                    </div>\n                    <hr/>\n                    <div className=\"row\">\n                    <div className={displayForm ? 'col-sm-4' : ''}>   \n                {elementForm}\n                      </div>     \n                        \n                        <div className={displayForm ? 'col-sm-8' : 'col-sm-12'}>\n                            <button className=\"btn btn-primary\" onClick={this.hienForm}>Thêm công việc</button>\n                           \n                            <Control keywords={this.keywords}\n                            onsort= {this.onsort}/>\n                           \n                            \n                            <TaskList item={ listInccc } onUpdateStatus={this.onUpdateStatus} onDelete={this.onDelete}\n                            onEdit={this.onEdit}\n                            onFilter = {this.onFilter}\n                            />\n                        \n                        </div>\n                        </div>\n                    </div>\n\n            \n        \n      )\n\n  }\n\n\n  }\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}